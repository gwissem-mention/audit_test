{# Overrides APYDataGridBundle::blocks.html.twig blocks #}

{# Block des CSS spécifiques au grid #}
{% block grid_stylesheets %}
    {% stylesheets output="compiled/grid.css" filter="cssrewrite, ?yui_css"
        'bundles/nodevogrid/css/grid.css'
    %}
        <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}

{# Block des JS spécifiques au grid #}
{% block grid_javascripts %}
    {% javascripts output="compiled/grid.js"
        'bundles/nodevogrid/js/script.js'
    %}
        <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}
{% endblock %}

{# Actions de masse #}
{% block grid_actions %}
    <div class="mass-actions">
        <div class="btn-group">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                Sélection <span class="caret"></span>
            </button>
            <ul class="dropdown-menu pull-left" role="menu">
                <li><a href="#" onclick="return {{ grid.hash }}_markVisible(true);">Sélectionner les lignes visibles</a></li>
                <li><a href="#" onclick="return {{ grid.hash }}_markVisible(false);">Désélectionner les lignes visibles</a></li>
                <li class="divider"></li>
                <li><a href="#" onclick="return {{ grid.hash }}_markAll(true);">{{ 'Select all'|trans }}</a></li>
                <li><a href="#" onclick="return {{ grid.hash }}_markAll(false);">{{ 'Deselect all'|trans }}</a></li>
            </ul>
        </div>

        <span class="grid_massactions_helper">
            <span class="mass-actions-selected" id="{{ grid.hash }}_mass_action_selected"></span>
        </span>
        {% spaceless %}
        <div class="grid_massactions pull-right form-group">
            <input type="hidden" id="{{ grid.hash }}_mass_action_all" name="{{ grid.hash }}[{{ constant('APY\\DataGridBundle\\Grid\\Grid::REQUEST_QUERY_MASS_ACTION_ALL_KEYS_SELECTED') }}]" value="0" />
            <div class="pull-left" style="margin-right:10px" >
                <select name="{{ grid.hash }}[{{ constant('APY\\DataGridBundle\\Grid\\Grid::REQUEST_QUERY_MASS_ACTION') }}]" class="form-control">
                    <option value="-1">Sélectionner une action</option>
                    {% for key, massAction in grid.massActions %}
                        <option value="{{ key }}">{{ massAction.title|trans }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="btn btn-default pull-left submit" >Exécuter</div>
        </div>
        {% endspaceless %}
    </div>
{% endblock grid_actions %}

{# Translate FR #}
{% block grid_scripts_mark_visible %}
function {{ grid.hash }}_markVisible(select)
{
    var form = document.getElementById('{{ grid.hash }}');

    var counter = 0;

    for (var i=0; i < form.elements.length; i++ ) {
        if (form.elements[i].type == 'checkbox') {
            form.elements[i].checked = select;

            if (form.elements[i].checked){
               counter++;
            }
        }
    }

    {% if grid.isFilterSectionVisible %}
    counter--;
    {% endif %}

    var selected = document.getElementById('{{ grid.hash }}_mass_action_selected');
    selected.innerHTML = counter > 0 ? '{{ '_s_ lignes sélectionnées' }}'.replace('_s_', counter) : '';

    document.getElementById('{{ grid.hash }}_mass_action_all').value = '0';

    return false;
}
{% endblock grid_scripts_mark_visible %}

{% block grid_scripts_mark_all %}
function {{ grid.hash }}_markAll(select)
{
    var form = document.getElementById('{{ grid.hash }}');

    for (var i=0; i < form.elements.length; i++ ) {
        if (form.elements[i].type == 'checkbox') {
            form.elements[i].checked = select;
        }
    }

    var selected = document.getElementById('{{ grid.hash }}_mass_action_selected');

    if (select) {
        document.getElementById('{{ grid.hash }}_mass_action_all').value = '1';
        selected.innerHTML = '{{ '_s_ lignes sélectionnées' }}'.replace('_s_', '{{ grid.totalCount }}');
    } else {
        document.getElementById('{{ grid.hash }}_mass_action_all').value = '0';
        selected.innerHTML = '';
    }

    return false;
}
{% endblock grid_scripts_mark_all %}

{# Boutons d'actions des lignes du grid #}
{% block grid_column_actions_cell %}
    {% set actions = column.getActionsToRender(row) %}
    <div class="btn-group">
        {% for action in actions %}
            {% if app.user|checkAuthorization( path(action.route, column.routeParameters(row, action), false) ) %}
                {# Si le mot delete est présent dans la route, on modifie le lien pour avoir le delete with confirm #}
                {% if 'delete' in action.route %}
                    <div onclick="deleteWithConfirm('{{ url(action.route, column.routeParameters(row, action), false) }}')" {% for name, value in action.attributes %} {{ name }}="{{ value }}" {% endfor %} >
                        {{ action.title|trans }}
                    </div>
                {% else %}
                    <a href="{{ url(action.route, column.routeParameters(row, action), false) }}" {% for name, value in action.attributes %} {{ name }}="{{ value }}" {% endfor %}>
                        {{ action.title|trans }}
                    </a>
                {% endif %}
            {% endif %}
        {% endfor %}
    </div>
{% endblock grid_column_actions_cell %}

{# En-têtes du grid (Thead + tri) #}
{% block grid_titles %}
    <thead>
        <tr class="grid-row-titles">
        {% for column in grid.columns %}
            {% if column.visible(grid.isReadyForExport) %}

                {# grid need a custom class depending of the sort #}
                {% if (column.sortable) %}
                    {% if column.order == 'asc' %}
                        {% set sort = 'sorting_asc' %}
                    {% elseif column.order == 'desc' %}
                        {% set sort = 'sorting_desc' %}
                    {% else %}
                        {% set sort = 'sorting' %}
                    {% endif %}
                {% else %}
                    {% set sort = '' %}
                {% endif %}

                <th class="{{sort}} {% if column.class %} {{ column.class }}{% endif %}{% if loop.last %} last-column{% endif %}"{% if(column.size > -1) %} style="width:{{ column.size }}px;"{% endif %}>
                {%- spaceless %}
                {% if column.type == 'massaction' %}
                    <span class="align-center">
                        <input type="checkbox" class="grid-mass-selector" onclick="{{ grid.hash }}_markVisible(this.checked);"/>    
                    </span>
                {% else %}
                    {% set columnTitle = grid.prefixTitle ~ column.title ~ '__abbr' %}
                    {% if columnTitle|trans == columnTitle %}
                        {% set columnTitle = grid.prefixTitle ~ column.title %}
                    {% endif %}
                    {% if (column.sortable) %}
                        <a href="{{ grid_url('order', grid, column) }}" title="{{ 'Order by'|trans }} {{ columnTitle|trans }}">{{ columnTitle|trans }}</a>
                    {% else %}
                        <span>{{ columnTitle|trans }}</span>
                    {% endif %}
                {% endif %}
                {% endspaceless -%}
                </th>
            {% endif %}
        {% endfor %}
        </tr>
    </thead>
{% endblock grid_titles %}

{# Block de filtres du grid : panel avec la liste des filtres #}
{% block grid_search %}
    {% if grid.isFilterSectionVisible %}
        <div class="col-md-12 grid-search">
            <div class="panel panel-midnightblue">
                <div class="panel-heading panel-collapse">
                    <h4>Filtrer les lignes</h4>
                    <div class="options">
                        <a href="javascript:;" ><i class="fa fa-chevron-{% if grid.isFiltered %}down{% else %}up{% endif %}"></i></a>
                    </div>
                </div>
                <div class="panel-body" style="display:{% if grid.isFiltered %}block{% else %}none{% endif %}">
                    <form id="{{ grid.hash }}_search" action="{{ grid.routeUrl }}" method="post">
                        {% for column in grid.columns %}
                            {% if column.isFilterable and column.type not in ['actions', 'massaction'] %}
                                {% set columnTitle = grid.prefixTitle ~ column.title %}
                                <div class="col-md-6 form-group">
                                    <label class="col-md-4 control-label">{{ columnTitle|trans }}</label>
                                    {{ grid_filter(column, grid, false)|raw }}
                                </div>
                            {% endif %}
                        {% endfor %}
                        <div class="clearfix"></div>
                        <div class="panel-footer">
                            <div class="pull-right">
                                <input type="submit" class="btn btn-primary grid-search-submit" value="{{ 'Search'|trans }}"/>
                                <input type="button" class="btn btn-primary grid-search-reset" value="{{ 'Reset'|trans }}" onclick="return {{ grid.hash }}_reset();"/>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    {% endif %}
{% endblock grid_search %}

{# Liste déroulante des différentes filtres possibles (égale à, différent de, ...) #}
{% block grid_column_operator %}
    {% if column.operatorsVisible %}
    <div class="grid-filter-operator col-md-4">
        <select class="form-control" name="{{ grid.hash }}[{{ column.id }}][operator]" onchange="{{ grid.hash }}_switchOperator(this, '{{ grid.hash }}__{{ column.id }}__query__'{% if submitOnChange is sameas(false) %}, false{% endif%});">
        {% for operator in column.operators %}
            <option value="{{ operator }}"{% if op == operator %} selected="selected"{% endif %}>{{ operator |trans }}</option>
        {% endfor %}
        </select>
    </div>
    {% endif %}
{% endblock grid_column_operator %}

{# Champ texte permettant de filtrer la colonne (en addition avec le filtre select précédent) #}
{% block grid_column_filter_type_input %}
    {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
    {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
    {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
    {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
    {% set op = column.data.operator is defined ? column.data.operator : column.defaultOperator %}
    {% set from = column.data.from is defined ? column.data.from : null %}
    {% set to = column.data.to is defined ? column.data.to : null %}
    
    {{ grid_column_operator(column, grid, op, submitOnChange) }}
    <span class="grid-filter-input-query col-md-4">
        <input type="{{ column.inputType }}" value="{{ from }}" class="form-control grid-filter-input-query-from" name="{{ grid.hash }}[{{ column.id }}][from]" id="{{ grid.hash }}__{{ column.id }}__query__from" {% if submitOnChange is sameas(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }} />
        {% if column.type == 'date' %}<input type="text" class="form-control grid-filter-input-query-from" id="alt{{ grid.hash }}__{{ column.id }}__query__from" value="{{ from }}"  {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>{% endif %}
        <br />
        <input type="{{ column.inputType }}" value="{{ to }}" class="form-control grid-filter-input-query-to" name="{{ grid.hash }}[{{ column.id }}][to]" id="{{ grid.hash }}__{{ column.id }}__query__to" {% if submitOnChange is sameas(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }} />
        {% if column.type == 'date' %}<input type="text" class="form-control grid-filter-input-query-from" id="alt{{ grid.hash }}__{{ column.id }}__query__to" value="{{ to }}" {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>{% endif %}
        
        {% if column.type == 'date' %}
            <script type="text/javascript">
                NodevoGridBundle_Grid_initFiltreDate('{{ grid.hash }}', '{{ column.id }}');
            </script>
        {% endif %}
    </span>
{% endblock grid_column_filter_type_input %}

{# Champ Select permettant de filtrer la colonne (ex: boolean, externals,... ) #}
{% block grid_column_filter_type_select %}
    {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
    {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
    {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
    {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
    {% set op = column.data.operator is defined ? column.data.operator : column.defaultOperator %}
    {% set from = column.data.from is defined ? column.data.from : null %}
    {% set to = column.data.to is defined ? column.data.to : null %}
    {% set multiple = column.selectMulti %}
    {% set expanded = column.selectExpanded %}
    <div class="grid-filter-select col-md-8">
        {{ grid_column_operator(column, grid, op, submitOnChange) }}
        <span class="grid-filter-select-query">
        {% if expanded %}
            <span class="grid-filter-select-query-from" id="{{ grid.hash }}__{{ column.id }}__query__from" {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>
            {% for key, value in column.values %}
                <span><input type="{% if multiple %}checkbox{% else %}radio{% endif %}" name="{{ grid.hash }}[{{ column.id }}][from][]" value="{{ key }}" {% if key in from %} checked="checked"{% endif %} {% if submitOnChange is sameas(true) %}onclick="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%}/><label>{{ value }}</label></span>
            {% endfor %}
            </span>
            <span class="grid-filter-select-query-to" id="{{ grid.hash }}__{{ column.id }}__query__to" {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>
            {% for key, value in column.values %}
                <span><input type="{% if multiple %}checkbox{% else %}radio{% endif %}" name="{{ grid.hash }}[{{ column.id }}][to]" value="{{ key }}" {% if not to is null and to == key %} checked="checked"{% endif %} {% if submitOnChange is sameas(true) %}onclick="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%}/><label>{{ value }}</label></span>
            {% endfor %}
            </span>
            {% if multiple %}<input type="submit" value="{{ 'Go'|trans }}" />{% endif %}
        {% else %}
            <select{% if multiple %} multiple="multiple"{% endif %} name="{{ grid.hash }}[{{ column.id }}][from][]" class="form-control grid-filter-select-query-from" id="{{ grid.hash }}__{{ column.id }}__query__from" {% if submitOnChange is sameas(true) %}onchange="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>
                <option value="">&nbsp;</option>
                {% for key, value in column.values|sort %}
                    <option value="{{ key }}"{% if key in from %} selected="selected"{% endif %}>{{ value }}</option>
                {% endfor %}
            </select>
            <select name="{{ grid.hash }}[{{ column.id }}][to]" class="form-control grid-filter-select-query-to" id="{{ grid.hash }}__{{ column.id }}__query__to" {% if submitOnChange is sameas(true) %}onchange="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>
                <option value="">&nbsp;</option>
                {% for key, value in column.values %}
                    <option value="{{ key }}"{% if not to is null and to == key %} selected="selected"{% endif %}>{{ value }}</option>
                {% endfor %}
            </select>
            {% if multiple %}<input type="submit" value="{{ 'Go'|trans }}" />{% endif %}
        {% endif %}
        </span>
    </div>
{% endblock grid_column_filter_type_select %}

{% block grid_column_lock_cell %}
    <span class="grid_lock_{{ row.getField(column.id)|default('0') }}" >{{ row.getField(column.id)|default('0') }}</span>
{% endblock grid_column_lock_cell %}

{% block grid_column_boolean_cell %}
    <span class="grid_boolean_{{ row.getField(column.id)|default('0') }}" >{{ row.getField(column.id)|default('0') }}</span>
{% endblock grid_column_boolean_cell %}

{# Block grid : génère toute la structure du grid #}
{% block grid %}
    {# Block des filtres #}
    {% if grid.totalCount > 0 or grid.isFiltered or grid.noDataMessage is sameas(false) %}
        {{ block('grid_search') }}  
    {% endif %}

    {# Block grid #}
    <div class="grid col-md-12">
    {% if grid.totalCount > 0 or grid.isFiltered or grid.noDataMessage is sameas(false) %}
        <form id="{{ grid.hash }}" action="{{ grid.routeUrl }}" method="post">
            <div class="grid_header">
                <div class="total">{{grid.totalCount}} lignes</div>
                {% if grid.massActions|length > 0 %}
                    {{ grid_actions(grid) }}
                {% endif %}
            </div>
            <div class="grid_body">
            <table class="table table-striped table-bordered">
            {% if grid.isTitleSectionVisible %}
                {{ grid_titles(grid) }}
            {% endif %}
            {{ grid_rows(grid) }}
            </table>
            </div>
            <div class="grid_footer">
            {% if grid.isPagerSectionVisible %}
                {{ grid_pager(grid) }}
                <div class="total">{{grid.totalCount}} lignes</div>
                {% block grid_pager_results_perpage %}
                    <div class="affnbreelement pull-right">
                        {{ 'Afficher'|trans }}
                        <select class="form-control" onchange="return {{ grid.hash }}_resultsPerPage(this.value);">
                            {% for key, value in grid.limits %}
                                <option value="{{ key }}"{% if (key == grid.limit) %} selected="selected"{% endif %}>{{ value }}</option>
                            {% endfor %}
                        </select> {{ 'Items per page'|trans }}
                    </div>
                {% endblock grid_pager_results_perpage %}
            {% else %}
                <div class="total">{{grid.totalCount}} lignes</div>
            {% endif %}
            {% if grid.exports|length > 0 %}
                {{ grid_exports(grid) }}
            {% endif %}
            {% if grid.tweaks|length > 0 %}
                {{ grid_tweaks(grid) }}
            {% endif %}
            </div>
            {% if withjs %}
                {{ grid_scripts(grid) }}
            {% endif %}
        </form>
    {% else %}
        {{ grid_no_data(grid) }}
    {% endif %}
    </div>
{% endblock grid %}