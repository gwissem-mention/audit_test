{# Tableau des stats des points durs #}
{% set option = 'point-dur' %}
<div class="panel panel-default gray">
    <a data-toggle="collapse" data-parent="#accordion" href="#collapsePointDur" class="collapsed" id="tableau_point_dur">
        <div class="panel-heading"><h4>Vue des points durs des parcours</h4></div>
    </a>
    <div id="collapsePointDur" class="collapse" style="height: 0px;">

        <div class="panel-body">
            <div class="col-md-12">
                <div class="form-group">
                    
                    {# Points durs #}
                    <div id="point-dur-filtres">
                        <form id ="form-point-dur">
                            <div class="row">
                                <div class="col-md-6">
                                    <p>Date de début: <input type="text" class="form-control" id="datepicker-datedebut" name="datedebut"></p>
                                </div>
                                <div class="col-md-6">
                                    <p>Date de fin: <input type="text" class="form-control" name="dateFin" id="datepicker-datefin"></p>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label class="control-label required" for="perimFonctionnelles">
                                        Choix du perimètre fonctionnel
                                        <span title="Ce champ est requis" style="color:red;font-size:10px">*</span>
                                    </label>
                                    <div class="blocParamFonct">
                                        <select name="perimFonctionnellesSelect" id="perimFonctionnelles" class="form-control validate[required]">
                                            <option value=""> - </option>
                                            {% for paramFonct in paramsFonct %}
                                                <option value="{{paramFonct.id}}" >{{paramFonct.libelle}}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label class="control-label required" for="profilType">
                                        Choix entre le profil et le type ES
                                        <span title="Ce champ est requis" style="color:red;font-size:10px">*</span>
                                    </label>
                                    <div class="blocProfilType">
                                        <select name="profilTypeSelect" id="profilType" class="form-control validate[required]">
                                            <option value=""> - </option>
                                            <option value="profil"> Profil </option>
                                            <option value="typeES"> Type établissement </option>s
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div class="row">
                            <div class="col-md-12 button-generation">
                                <div id="generation-tableau-point-dur" onclick="generation( '{{path('hopital_numerique_stat_point_dur_generate_tableau')}}' );" class="finish btn btn-success pull-right" title="Générer le tableau" ><i class="fa fa-bar-chart-o"></i></div>
                                <input type="button" id="clickExportCSV" value="Export as CSV 1">
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="point-dur-tableau">
                    </div>

                </div>
            </div>  
        </div>
    </div>
</div>

<style type="text/css">
#point-dur-filtres .button-generation {margin-top: 15px;}
#point-dur-filtres {padding-bottom:15px;border-bottom: 1px solid #EDEEF0}
#point-dur-tableau {margin-top: 15px;}
</style>

<script type="text/javascript">
    $(document).ready(function() { 

        //bind de Validation Engine
        $('form.toValidate').validationEngine();

        //Date début
        $( "#datepicker-datedebut" ).datepicker({
            defaultDate: "+1w",
            changeMonth: true,
            numberOfMonths: 1,
            dateFormat: "dd-mm-yy",
            onClose: function( selectedDate ) {
                $( "#datepicker-datefin" ).datepicker( "option", "minDate", selectedDate );
            }
        });
        $( "#datepicker-datedebut" ).datepicker( "option", "showAnim", "fadeIn" );

        //Date de fin
        $( "#datepicker-datefin" ).datepicker({
            defaultDate: "+1w",
            changeMonth: true,
            numberOfMonths: 1,
            dateFormat: "dd-mm-yy",
            onClose: function( selectedDate ) {
                $( "#datepicker-datedebut" ).datepicker( "option", "maxDate", selectedDate );
            }
        });
        $( "#datepicker-datefin" ).datepicker( "option", "showAnim", "fadeIn" );

        $("#clickExportCSV").on('click', function (event) {
            // CSV
            exportTableToCSV.apply(this, [$('#point-dur-table'), 'export.csv']);
        });
    });

    function generation(url)
    {
        if ( $('#form-point-dur').validationEngine('validate') ) 
        {
            var loaderButton  = $('#generation-tableau-point-dur').nodevoLoader().start();
            var loaderTableau = $('#point-dur-tableau').nodevoLoader().start();

            $.ajax({
                url     : url,
                data    :  $('#form-point-dur').serialize(),
                type    : 'POST',
                success : function( data ){
                    //Ajout de la réponse
                    $('#point-dur-tableau').html( data );
                    loaderButton.finished();
                    loaderTableau.finished();
                }
            });
        }
    }

    function exportTableToCSV($table, filename) {

        var $rows = $table.find('tr:has(td)'),

            // Temporary delimiter characters unlikely to be typed by keyboard
            // This is to avoid accidentally splitting the actual contents
            tmpColDelim = String.fromCharCode(11), // vertical tab character
            tmpRowDelim = String.fromCharCode(0), // null character

            // actual delimiter characters for CSV format
            colDelim = '","',
            rowDelim = '"\r\n"',

            // Grab text from table into CSV formatted string
            csv = $('#point-dur-table').table2CSV(),

            // Data URI
            csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

        $(this)
            .attr({
            'download': filename,
                'href': csvData,
                'target': '_blank'
        });
    }

    // This must be a hyperlink
    $(".export").on('click', function (event) {
        // CSV
        exportTableToCSV.apply(this, [$('#dvData>table'), 'export.csv']);
        
        // IF CSV, don't do event.preventDefault() or return false
        // We actually need this to be a typical hyperlink
    });

    jQuery.fn.table2CSV = function(options) {
        var options = jQuery.extend({
            separator: ';',
            header: [],
            delivery: 'popup' // popup, value
        },
        options);

        var csvData = [];
        var headerArr = [];
        var el = this;

        //header
        var numCols = options.header.length;
        var tmpRow = []; // construct header avalible array

        if (numCols > 0) {
            for (var i = 0; i < numCols; i++) {
                tmpRow[tmpRow.length] = formatData(options.header[i]);
            }
        } else {
            $(el).filter(':visible').find('th').each(function() {
                if ($(this).css('display') != 'none') tmpRow[tmpRow.length] = formatData($(this).html());
            });
        }

        row2CSV(tmpRow);

        // actual data
        $(el).find('tr').each(function() {
            var tmpRow = [];
            $(this).filter(':visible').find('td').each(function() {
                if ($(this).css('display') != 'none') tmpRow[tmpRow.length] = formatData($(this).html());
            });
            row2CSV(tmpRow);
        });
        if (options.delivery == 'popup') {
            var mydata = csvData.join('\n');
            return popup(mydata);
        } else {
            var mydata = csvData.join('\n');
            return mydata;
        }

        function row2CSV(tmpRow) {
            var tmp = tmpRow.join('') // to remove any blank rows
            // alert(tmp);
            if (tmpRow.length > 0 && tmp != '') {
                var mystr = tmpRow.join(options.separator);
                csvData[csvData.length] = mystr;
            }
        }
        function formatData(input) {
            // replace " with â€œ
            var regexp = new RegExp(/["]/g);
            var output = input.replace(regexp, "â€œ");
            //HTML
            var regexp = new RegExp(/\<[^\<]+\>/g);
            var output = output.replace(regexp, "");
            if (output == "") return '';
            return '"' + output + '"';
        }
        function popup(data) {
            var generator = window.open('', 'csv', 'height=400,width=600');
            generator.document.write('<html><head><title>CSV</title>');
            generator.document.write('</head><body >');
            generator.document.write('<textArea cols=70 rows=15 wrap="off" >');
            generator.document.write(data);
            generator.document.write('</textArea>');
            generator.document.write('</body></html>');
            generator.document.close();
            return true;
        }
    };
</script>