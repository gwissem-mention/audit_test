{% extends 'NodevoAdminBundle::admin.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    {% stylesheets output="compiled/hopitalnumerique-recherche-chapitre-index.css" filter="cssrewrite, ?yui_css" 
        "@select2_css" 
        "@fancybox_css"
        "@validationEngine_css"
        "@jquery_toggles_css"
        'bundles/nodevoadmin/css/jquery.nestable.css'
        'bundles/hopitalnumeriquerecherche/css/ExpBesoin/style.css'
        'bundles/nodevoadmin/css/toggles.css'
    %}
        <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}

{% block javascripts %}
    {{parent()}}
    {% javascripts output="compiled/hopitalnumerique-recherche-chapitre-index.js" 
        "@select2_js" 
        "@fancybox_js" 
        "@nestable_js"
        "@tinymce_js"
        "@jquery_toggles_js"
        "@validationEngine_js"
        "@json_js"
        'bundles/hopitalnumeriquerecherche/js/ExpBesoin/script.js'
        'bundles/nodevogestionnairemedia/js/moxiemanager/js/moxman.loader.min.js'
        'bundles/nodevogestionnairemedia/js/MoxieManager.js'
    %}
        <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}
{% endblock %}

{% block h1Title %}
    Gestion de l'aide à l'expression du besoin
{% endblock %}

{% block toolbarButton %}
{% endblock %}

{% block body %}

<script type="text/javascript">
$(document).ready(function() {
    if( $('.addQuestion').length > 0 )
    {
        //Ajoute un chapitre
        $('.addQuestion').click(function(){
            apprise('Titre de la question', {'input' : true, 'textOk' : 'Ajouter', 'textCancel' : 'Annuler'}, function(r) {
                if(r) { 
                    addQuestion( r );
                }
            });
        });
    }

    //Création et gestion de l'arborescence des chapitres
    if( $('#questions').length > 0 ){
        $('#questions').nestable({'maxDepth':2,'group':0}).on('change', function() {
            var serializedDatas = $(this).nestable('serialize');

            $.ajax({
                url  : $('#order-chapitre-url').val(),
                data : {
                    datas : serializedDatas
                },
                type     : 'POST',
                dataType : 'json',
                success  : function( data ){
                    //console.log( 'reorder executed' );
                }
            });
        });
    }

    //Fancybox
    if( $('.fancy').length > 0 )
        initFancyBox();
    
    //bind de Validation Engine
    if( $('form.toValidate').length > 0 )
        $('form.toValidate').validationEngine();
});

// Initialise la fancybox
function initFancyBox()
{
    $('.fancy').fancybox({
            'padding'   : 0,
            'autoSize'  : false,
            'width'     : '80%',
            'height'    : '600px',
            'scrolling' : 'no',
            'modal'     : true
        });
}

//Toogle Block and manage classes
function toggle( block )
{
    $('.'+block).slideToggle();

    if ( $('.'+block).is(':visible') ){
        $('.'+block).find('input').addClass('validate[required,maxSize[255]]');
        $('.'+block).find('select').addClass('validate[required]');
    }else{
        $('.'+block).find('input').removeClass('validate[required,maxSize[255]]');
        $('.'+block).find('select').removeClass('validate[required]');
    }   
}

//toggle le type de la question et cache les champs inutiles
function toggleTypeQuestion()
{
    if( $('#hopitalnumerique_autodiag_question_type').val() == 417 ){
        $('.txt').show();
        $('.not-txt').hide();
        $('#hopitalnumerique_autodiag_question_options').removeClass('validate[required]');
    }else if ($('#hopitalnumerique_autodiag_question_type').val() == 415 || $('#hopitalnumerique_autodiag_question_type').val() == 416 ){
        $('.txt').hide();
        $('.not-txt').show();
        $('#hopitalnumerique_autodiag_question_options').addClass('validate[required]');
    }else{
        $('.txt').hide();
        $('.not-txt').hide();
        $('#hopitalnumerique_autodiag_question_options').removeClass('validate[required]');
    }
}

//ajoute une question
function addQuestion( titre )
{
    $.ajax({
        url  : $('#add-question-url').val(),
        data : {
            titre : titre
        },
        type     : 'POST',
        success  : function( data ){
            if( data != '' ){
                $('#questions ol:first').append( data );

                if( $('#questions ol li').length > 0){
                    $('.designForBlank').hide();
                }

                //Forcer le click sur la question ajoutée

                apprise('Question ajoutée.');
            }else
                apprise('Une erreur est survenue lors de l\'ajout de votre question, merci de réessayer.');
        }
    });
}

//Editer une question
function editQuestion( id, url)
{ 
    apprise('Titre de la question', {'input' : true, 'textOk' : 'Modifier', 'textCancel' : 'Annuler'}, function(rep) {
        if(rep)
        { 
            $.ajax({
                url  : url,
                data : {
                    id : id,
                    titre : rep
                },
                type     : 'POST',
                success  : function( data ){
                    if( data != '' )
                    {
                        location.reload();
                        //Forcer le click sur la question éditée
                        
                        // $.ajax({
                        //     url: "",
                        //     context: document.body,
                        //     success: function(s,x){
                        //         $('#questions').html(s);
                        //     }
                        // });
                    }
                    else
                    {
                        apprise('Une erreur est survenue lors de l\'ajout de votre question, merci de réessayer.');
                    }
                }
            });
        }
    });
}

//Supprime le contenu en cours de visualisation
function deleteQuestion( id, url )
{
    apprise('Attention, cette opération est irréversible, êtes-vous sur de vouloir continuer ?', {'verify':true,'textYes':'Oui','textNo':'Non'}, function(r) {
        if(r) { 
            $.ajax({
                url  : url,
                data : {
                    id : id
                },
                type     : 'POST',
                dataType : 'json',
                success  : function( data ){
                    if( data.success ){
                        //correction effectuée : si on a supprimer tous les enfants alors on enlève le petit '-' du parent
                        if( data.childs == 0 ){
                            $('#questions #chapitre-' + id).parent().parent().find('button').each(function(){
                                $(this).remove();
                            })
                        }

                        location.reload();
                    }
                }
            });
        }
    });
}

//sauvegarde le chapitre
function saveQuestion( url )
{
    $.ajax({
        url      : url,
        data     : $('#fancybox form').serialize(),
        type     : 'POST',
        dataType : 'json',
        success  : function( data ){
            if( data.success ){
                $.fancybox.close(true);
                window.location.reload();
            }
        }
    });
}

//Supprime le contenu en cours de visualisation
function deleteReponse( id, url )
{
    apprise('Attention, cette opération est irréversible, êtes-vous sur de vouloir continuer ?', {'verify':true,'textYes':'Oui','textNo':'Non'}, function(r) {
        if(r) { 
            $.ajax({
                url  : url,
                data : {
                    id : id
                },
                type     : 'POST',
                dataType : 'json',
                success  : function( data ){
                    if( data.success ){
                        //correction effectuée : si on a supprimer tous les enfants alors on enlève le petit '-' du parent
                        if( data.childs == 0 ){
                            $('#questions #question-' + id).parent().parent().find('button').each(function(){
                                $(this).remove();
                            })
                        }

                        //supprime l'élément dans le HTML
                        $('#questions #question-' + id).remove();

                        if( $('#questions ol li').length == 0)
                            $('#questions .designForBlank').show();
                    }
                }
            });
        }
    });
}

//Selectionne un chapitre et charge l'ensemble des questions liés
function selectQuestion( id, url )
{
    $('#reponses .selectionQuestion').hide();
    
    //bind de Validation Engine
    if( $('form.toValidate').length > 0 )
        $('form.toValidate').validationEngine();

    $.ajax({
        url     : url,
        type    : 'POST',
        success : function( data ){
            $('#reponses .results').html( data );
        }
    });

    $('#reponses .question').val( id );
}

//Selectionne un chapitre et charge l'ensemble des questions liés
function addReponse( url )
{
    $.ajax({
        url     : url,
        data    :  $('#designForForm form').serialize(),
        type    : 'POST',
        success : function( data ){
            //Ajout de la réponse
            window.location.reload();
        }
    });
}

//sauvegarde le chapitre
function saveReponse( url )
{
    if( $("#fancybox form").validationEngine('validate') ) {
       $.ajax({
            url     : url,
            data    : $('#fancybox form').serialize(),
            type    : 'POST',
            success : function( data ){
                $('#questions .results').html( data );
                $.fancybox.close(true);
            }
        });
    }
    return false;
}

//Met à jour le nombre d'enfants sélectionés dans la popin
function updateNbChilds()
{
    $('#references-tab .ref').each(function(){
        childs         = $(this).data('childs');
        parentLevel    = $(this).data('level');
        nbChecked      = 0;
        nbChildsDirect = 0;
        
        if( childs.length > 0 ) {
            $.each(childs,function(key, val){
                if ( $('.ref-'+val+' .checkbox').prop('checked') && $('.ref-'+val).data('level') == parentLevel + 1 )
                    nbChecked++
                
                if ( $('.ref-'+val).data('level') == parentLevel + 1 )
                    nbChildsDirect++
            });
        }

        $(this).find('.nbChilds').html( nbChecked );
        $(this).find('.nbChildsDirect').html( nbChildsDirect );
    })
}

//Gère le collapse dans la pop-in des références
function manageCollapse(element, way)
{
    childs = $(element).parent().parent().data('childs');
    level  = $(element).parent().parent().data('level') + 1;

    $.each(childs,function(key, val){
        if( way === 'collapse' )
            $('.ref-'+val).slideUp();
        else{
            if ( $('.ref-'+val).data('level') == level){
                $('.ref-'+val).slideDown();
                $('.ref-'+val+' .btn i').removeClass('fa-arrow-down').addClass('fa-arrow-right');
            }
        }
    });

    $(element).find('i').toggleClass('fa-arrow-down fa-arrow-right');
}

// Initialise la fancybox
function initFancyBox()
{
    $('.fancy').fancybox({
            'padding'   : 0,
            'autoSize'  : false,
            'width'     : '80%',
            'height'    : '600px',
            'scrolling' : 'no',
            'modal'     : true
        });
}
</script>

<style type="text/css">
/* Second Toolbar  */
div.sous_options {text-align: right; margin: 0px 10px 10px 0px;}

/* Gestion des questions */
#questions .text-muted {margin-right:120px}
#questions .dd3-actions .dd3-plus { background: #85c744;}
#questions .dd3-actions .dd3-plus:hover { background: #71AE34; }
#questions .dd3-actions .dd3-plus:before{ content: '\f067'; }

/* Gestion des reponses */
#reponses .text-muted {margin-right:60px}

/* fancybox References */
#panel-references{padding:0;}
#panel-references .tableContent{overflow-y:scroll; height:470px}
#panel-references .tableContent thead .checkAll{display: block; margin: 0 auto}
#panel-references .tableContent .level1{background: #34495e}
#panel-references .tableContent .level1 td{color: #ffffff; font-size: 16px; font-weight: bold}
#panel-references .tableContent .level2{background: #D8D8D8}
#panel-references .tableContent .level3{background: #E6E6E6}
#panel-references .panel-footer{margin:0;}

/* Affichage d'un résultat */
#resultat-detail h3{margin-left:30px;}

/* Affichage de la liste des questions/réponses d'un outil */
#listeChapitres h2{background: #cfcfcf; margin-top: 20px; padding: 5px 20px; color: #6f3596}
#listeChapitres h2 span{color:#4d4d4d; font-size: 20px; padding:10px 0;}
#listeChapitres .sous-chapitre .row{padding-left:20px;}
#listeChapitres .question{font-weight: bold; margin-left: 5px}
#listeChapitres .question span{font-weight: normal;}
#listeChapitres h3{background: #efefef; margin-top: 20px; padding: 5px 20px;color: #6f3596}
#listeChapitres h3 span{color:#4d4d4d; font-size: 17px; padding:5px 0;}

/* Affichage des réponses */
#designForForm {border-bottom:1px solid #E5E5E5;}
.toggle .toggle-on,  .toggle .toggle-off{color:#1DA4C5;}
.toggle .toggle-on.active, .toggle .toggle-off.active{color:#FFFFFF;}
</style>

    <div class="col-sm-12">

        <div class="panel-body">
            <div class="sous_options">
                <div class="btn-toolbar">
                    <div class="btn btn-default addQuestion">Ajouter une question</div>
                </div>
            </div>

            <div class="col-md-12">
                <div class="well well-lg">
                    <span class="designForBlank" style="{% if expBesoins|length >= 1 %}display:none{% endif %}">Cliquez sur le bouton 'Ajouter une question' pour ajouter une question.</span>
                    <div class="dd" id="questions">
                        <ol class="dd-list">
                            {% import _self as mySelf %}
                            {% for expBesoin in expBesoins %}
                                {{ mySelf.buildTree(expBesoin) }}
                            {% endfor %}
                        </ol>
                    </div>
                </div>

                <input type="hidden" id="add-question-url" value="{{path('hopital_numerique_expbesoin_addquestion')}}" />
                {#<input type="hidden" id="order-question-url" value="{{path('hopitalnumerique_autodiag_chapitre_reorder',{'id':outil.id})}}" />
                <input type="hidden" id="calc-ponderation-url" value="{{path('hopitalnumerique_autodiag_outil_ponderation',{'id':outil.id})}}" />#}

            </div>

            <div class="clearfix"></div>

            <div class="col-md-12">
                <div class="well well-lg" id="reponses">
                    <span class="selectionQuestion">Vous devez sélectionner une question avant de visualiser les réponses.</span>
                    <div class="results">
                        
                    </div>
                    <input type="hidden" class="question" value="0" />
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% macro buildTree(expBesoin) %}
    <li class="dd-item dd3-item" data-id="{{expBesoin.id}}" id="expBesoin-{{expBesoin.id}}" >
        <div class="dd-handle dd3-handle"></div>
        <div class="dd3-content">
            <a href="javascript:selectQuestion({{expBesoin.id}}, '{{path('hopitalnumerique_expbesoin_question', {'id':expBesoin.id})}}')">{{expBesoin.libelle}}</a>
        </div>
        <div class="dd3-actions">
            <div onclick="deleteQuestion( {{expBesoin.id}}, '{{path('hopital_numerique_expbesoin_deletequestion', {'id':expBesoin.id})}}' );" class="pull-right dd3-trash"><i class="fa fa-trash-o"></i></div>
            <div onclick="editQuestion( {{expBesoin.id}}, '{{path('hopital_numerique_expbesoin_editquestion', {'id':expBesoin.id})}}' );" class="pull-right dd3-edit question-edit"><i class="fa fa-edit"></i></div>
        </div>
    </li>
{% endmacro %}